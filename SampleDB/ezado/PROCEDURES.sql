CREATE PROCEDURE [ezado].[PROCEDURES]
(
	@SCHEMAS ezado.Schema_Name_Table READONLY
)
WITH EXECUTE AS OWNER
AS
BEGIN
SELECT
	SPECIFIC_SCHEMA specificSchema,
	SPECIFIC_NAME specificName,
	ROUTINE_TYPE routineType,
	CASE 
		WHEN CHARINDEX('*Returns Json*',ROUTINE_DEFINITION) > 0 THEN CAST(1 AS BIT)
		ELSE CAST(0 AS BIT)
	END isJsonResult,
	CASE 
		WHEN CHARINDEX('*Single Result*',ROUTINE_DEFINITION) > 0 THEN CAST(1 AS BIT)
		ELSE CAST(0 AS BIT)
		END isSingleResult,
	CASE 
		WHEN CHARINDEX('*Always Encrypted*',ROUTINE_DEFINITION) > 0 THEN CAST(1 AS BIT)
		ELSE CAST(0 AS BIT)
	END isAlwaysEncrypted,
	CASE 
		WHEN CHARINDEX('*Non Query*',ROUTINE_DEFINITION) > 0 THEN CAST(1 AS BIT)
		ELSE CAST(0 AS BIT)
	END isNonQuery,
	(SELECT
		ISP.ORDINAL_POSITION ordinalPosition,
		ISP.PARAMETER_MODE parameterMode,
		ISP.IS_RESULT isResult,
		CASE ISP.PARAMETER_NAME
			WHEN '' THEN '@RETURN_VALUE'
			ELSE ISP.PARAMETER_NAME
		END parameterName,
		ISP.DATA_TYPE dataType,
		ISP.CHARACTER_MAXIMUM_LENGTH characterMaximumLength,
		ISP.NUMERIC_PRECISION numericPrecision,
		ISP.NUMERIC_SCALE numericScale,
		ISP.DATETIME_PRECISION datetimePrecision,
		ISP.USER_DEFINED_TYPE_SCHEMA userDefinedTypeSchema,
		ISP.USER_DEFINED_TYPE_NAME userDefinedTypeName,
		CASE 
		WHEN CHARINDEX(CONCAT('IF ', ISP.PARAMETER_NAME, ' IS NULL THROW'),ROUTINE_DEFINITION) > 0 THEN CAST(0 AS BIT)
		WHEN CHARINDEX(CONCAT('IF NOT EXISTS (SELECT 1 FROM ', ISP.PARAMETER_NAME, ') THROW'),ROUTINE_DEFINITION) > 0 THEN CAST(0 AS BIT)
		ELSE CAST(1 AS BIT)
		END isNullable,
		EAO.NUMERIC_MINIMUM_VALUE numericMinimumValue,
		EAO.NUMERIC_MAXIMUM_VALUE numericMaximumValue,
		EAO.REGULAR_EXPRESSION regularExpression
	FROM
		INFORMATION_SCHEMA.PARAMETERS ISP LEFT JOIN dbo.EZ_ADO_VALIDATORS EAO ON 
		ISP.SPECIFIC_SCHEMA = EAO.SPECIFIC_SCHEMA AND
		ISP.SPECIFIC_NAME = EAO.SPECIFIC_NAME AND
		ISP.PARAMETER_NAME = EAO.PARAMETER_NAME
	WHERE
		ISR.SPECIFIC_SCHEMA = ISP.SPECIFIC_SCHEMA AND
		ISR.SPECIFIC_NAME = ISP.SPECIFIC_NAME FOR Json PATH) parameters
	FROM INFORMATION_SCHEMA.ROUTINES ISR
	WHERE [SPECIFIC_SCHEMA] IN (SELECT [SCHEMA_NAME] FROM @SCHEMAS)
	FOR Json PATH;

	RETURN 200;
END;